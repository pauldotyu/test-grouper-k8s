apiVersion: v1
data:
  grouper.client.properties: "#\n# Copyright 2014 Internet2\n#\n# Licensed under the
    Apache License, Version 2.0 (the \"License\");\n# you may not use this file except
    in compliance with the License.\n# You may obtain a copy of the License at\n#\n#
    \  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable
    law or agreed to in writing, software\n# distributed under the License is distributed
    on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
    express or implied.\n# See the License for the specific language governing permissions
    and\n# limitations under the License.\n#\n\n#\n# Grouper client configuration\n#
    $Id: grouper.client.example.properties,v 1.24 2009-12-30 04:23:02 mchyzer Exp
    $\n#\n\n# The grouper client uses Grouper Configuration Overlays (documented on
    wiki)\n# By default the configuration is read from grouper.client.base.properties\n#
    (which should not be edited), and the grouper.client.properties overlays\n# the
    base settings.  See the grouper.client.base.properties for the possible\n# settings
    that can be applied to the grouper.client.properties\n\n########################################\n##
    LDAP connection settings\n########################################\n\n# url of
    directory, including the base DN (distinguished name)\n# e.g. ldap://server.school.edu/dc=school,dc=edu\n#
    e.g. ldaps://server.school.edu/dc=school,dc=edu\ngrouperClient.ldap.url =\n\n#
    kerberos principal used to connect to ldap\ngrouperClient.ldap.login =\n\n# password
    for shared secret authentication to ldap\n# or you can put a filename with an
    encrypted password\ngrouperClient.ldap.password =\n\n########################################\n##
    Web service Connection settings\n########################################\n\n#
    url of web service, should include everything up to the first resource to access\n#
    e.g. http://groups.school.edu:8090/grouper-ws/servicesRest\n# e.g. https://groups.school.edu/grouper-ws/servicesRest\ngrouperClient.webService.url
    = https://ws/grouper-ws/servicesRest\n\n# kerberos principal used to connect to
    web service\ngrouperClient.webService.login = banderson\n\n# password for shared
    secret authentication to web service\n# or you can put a filename with an encrypted
    password\ngrouperClient.webService.password.elConfig = ${java.lang.System.getenv().get('GROUPER_CLIENT_WEBSERVICE_PASSWORD_FILE')
    != null ? org.apache.commons.io.FileUtils.readFileToString(java.lang.System.getenv().get('GROUPER_CLIENT_WEBSERVICE_PASSWORD_FILE'),
    \"utf-8\") : java.lang.System.getenv().get('GROUPER_CLIENT_WEBSERVICE_PASSWORD')
    }\n\n\n################################\n## Grouper Messaging System\n################################\n
    \n# name of messaging system which is the default\ngrouper.messaging.default.name.of.messaging.system
    = rabbitmq\n \n# name of a messaging system.  note, \"grouperBuiltinMessaging\"
    can be arbitrary\n# grouper.messaging.system.grouperBuiltinMessaging.name = grouperBuiltinMessaging\n
    \n# class that implements edu.internet2.middleware.grouperClient.messaging.GrouperMessagingSystem\n#
    grouper.messaging.system.grouperBuiltinMessaging.class = edu.internet2.middleware.grouper.messaging.GrouperBuiltinMessagingSystem\n
    \n# name of a messaging system.  note, \"grouperBuiltinMessaging\" can be arbitrary\ngrouper.messaging.system.rabbitmqSystem.name
    = rabbitmqSystem\n \n# class that implements edu.internet2.middleware.grouperClient.messaging.GrouperMessagingSystem\ngrouper.messaging.system.rabbitmqSystem.class
    = edu.internet2.middleware.grouperMessagingRabbitmq.GrouperMessagingRabbitmqSystem\n
    \n# host address of rabbitmq queue\ngrouper.messaging.system.rabbitmqSystem.host
    = rabbitmq\n \n# virtual host of rabbitmq queue\ngrouper.messaging.system.rabbitmqSystem.virtualhost
    =\n \n# port of rabbitmq queue\ngrouper.messaging.system.rabbitmqSystem.port =\n
    \ngrouper.messaging.system.rabbitmqSystem.defaultPageSize = 10\n \ngrouper.messaging.system.rabbitmqSystem.maxPageSize
    = 50\n \n \n# name of a messaging system, required\ngrouper.messaging.system.rabbitmq.name
    = rabbitmq\n \n# default system settings to this messaging system, note, there
    is only one level of inheritance\ngrouper.messaging.system.rabbitmq.defaultSystemName
    = rabbitmqSystem\n\ngrouper.messaging.system.rabbitmq.user = guest\n\n#pass\ngrouper.messaging.system.rabbitmq.password.elConfig
    = ${java.lang.System.getenv().get('RABBITMQ_PASSWORD_FILE') != null ? org.apache.commons.io.FileUtils.readFileToString(java.lang.System.getenv().get('RABBITMQ_PASSWORD_FILE'),
    \"utf-8\") : java.lang.System.getenv().get('RABBITMQ_PASSWORD') }\n# set the following
    three properties if you want to use TLS connection to rabbitmq. All three need
    to be populated.\n# TLS Version\n#grouper.messaging.system.rabbitmqSystem.tlsVersion
    = TLSv1.1\n \n# path to trust store file\n#grouper.messaging.system.rabbitmqSystem.pathToTrustStore
    =\n \n# trust passphrase\n#grouper.messaging.system.rabbitmqSystem.trustPassphrase
    ="
kind: ConfigMap
metadata:
  name: grouper-client-properties
  namespace: test
# immutable: true